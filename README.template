# json-schema-benchmark
Benchmarks for Node.js JSON-schema validators.

Also test against official JSON-schema test suite and check
for validation causing side-effects on schema or data.

# Results

![performance](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh={{resultGraphBarHeight}},{{graphBarSpacing}},1&chs=600x{{resultsGraphHeight}}&chxl=-1:{{#results}}|{{name}}{{/results}}&chd=t2:{{#results}}{{percentage}}{{#comma}},{{/comma}}{{/results}})

|Validator|Relative speed|Number of test runs per second|
|---------|:------------:|:----------------------------:|
{{#results}}
|`{{name}}`|{{percentage}}%|{{hz}} Â± {{plusMinusPercent}}%|
{{/results}}

Validators tested: {{#validators}}`{{name}}`, {{/validators}}
(those not in the results above where excluded because of failing tests - see below for details)

`{{fastestValidator}}` is currently by far the fastest JSON-schema validator out there.

The fastest validator has 100%, the rest a lower score relative to the fastest.
If a validator has a score of 5% that means that it's speed is 5% of the fastest,
meaning that it's 20 times slower than the fastest

The number in parenthesis is the number of validations of the entire test suite per second.

# What is this for?

This test suite uses the official JSON-schema test suite, but it uses it to test the speed of validators.

This also means, that if a validator does not pass a chosen subset of the official test suite, it will show up in these results (below).

This benchmark is using  the `benchmark` module to gain statistically significant results.

Feel free to add more validators to the test suite in a pull request.

# Test failure summary

Number of failed tests per validator (lower is better)

![failing tests](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh={{validatorsFailingTestsGraphBarHeight}},{{graphBarSpacing}},1&chs=600x{{validatorsFailingTestsGraphHeight}}&chxl=-1:{{#validatorsFailingTests}}|{{name}}{{/validatorsFailingTests}}&chd=t2:{{#validatorsFailingTests}}{{count}}{{#comma}},{{/comma}}{{/validatorsFailingTests}}&chxr=0,0,{{maxFailingTests}})

|Validator|Number of failing tests|
|---------|-----------------------|
{{#validatorsFailingTests}}
|`{{name}}`|[{{count}}](https://github.com/Muscula/json-schema-benchmark/blob/master/reports/{{name}}.md)|
{{/validatorsFailingTests}}

# Side-effects summary

Number of tests that caused side-effects. The schema or data was altered by the validator.

|Validator|Number of side-effects (BAD)|
|---------|----------------------------|
{{#validatorsSideEffects}}
|`{{name}}`|{{count}}|
{{/validatorsSideEffects}}

Validators not in the list have no side-effects on data or schemas.

# Detaild test reports
{{#validators}}

[`{{name}}`](https://github.com/Muscula/json-schema-benchmark/blob/master/reports/{{name}}.md)
{{/validators}}

# Thanks
This code was originally pulled out from the benchmarks in the `themis` json-schema validator.
Thanks goes to Johny Jose for his work there.

# License
MIT
